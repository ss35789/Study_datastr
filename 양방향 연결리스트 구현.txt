
class Node{
	private Node pre;
	private Node tail;
	private int value;

	public int getvalue(){
		return value;
	}
	public void setvalue(int item) {
		this.value=item;
	}
	public Node getnextNode() {
		return tail;
	}
	
	public void setnextNode(Node n) {
		this.tail=n;
		
	}
	public Node getpreNode() {
		return pre;
	}
	public void setpreNode(Node n) {
		this.pre=n;
	}
}

class List{
	Node head;
	Node cur;// 현재 우리가 보는 위치, 마지막에 추가된 노드를 가리키고 있음
	List(){
		 head=new Node();//head 노드를 생성
		 cur=head;
	}
	public void print() {
		Node i;
		i=head.getnextNode();//head 다음 노드부터 출력
		while(i!=null) {
			System.out.print(i.getvalue()+" -> ");
			i=i.getnextNode();
		}
		System.out.print("null");
	}
	
	public void add(int data) {
		Node addNode=new Node();
		addNode.setvalue(data);
		cur.setnextNode(addNode);
		addNode.setpreNode(cur); 
		cur=addNode;
		System.out.println(data+"가 추가되었습니다.");
		
	}
	
	public int delete(int item) {
		try {
			Node del=search(item);
			if(del.getnextNode()==null) {
				del.getpreNode().setnextNode(null);
				
			}
			else {
				del.getpreNode().setnextNode(del.getnextNode());//del의 앞의 노드의 다음노드링크를 del의 다음노드로 설정
				del.getnextNode().setpreNode(del.getpreNode());//deld의 다음 노드의 앞노드링크를 del의 앞노드로 설정
				
			}
			System.out.println(del.getvalue()+"값이 삭제되었습니다.");
			
			return del.getvalue();
		}catch(NullPointerException e) {
	
		}
		return -1;
		
	}
	public Node search(int item) {
		
		Node se=head;
		int count =0;
		while(se!=null) {
			if(se.getvalue()==item) {
				System.out.println(item+" 노드는"+count+"번 째에 있습니다.");
				return se;
			}
			se=se.getnextNode();
			count++;
		}
		System.out.println(item+" 노드는 존재하지 않습니다.");
		return null;
		
	}
}





public class main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		List list=new List();//중복되는 숫자 추가 가능 , search 는 가장 처음으로 검색된 값만 출력, delete도 처음거만 삭제
							
		list.add(3);
		list.add(4);
		list.add(5);
		list.add(6);
		list.delete(3);
		list.add(8);
		list.add(5);
		list.add(6);
		list.search(3);
		list.delete(5);
		list.print();
	}

}
